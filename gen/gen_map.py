#! /usr/bin/env python3

import csv


html = open("doc/reg_map.html","w")
header = open("application/reg_map.h","w")

header.write(R"""#ifndef _MICROMINI_REG_MAP_H
#define _MICROMINI_REG_MAP_H
/* Autogenerated by gen/gen_map.py, do not edit*/

enum e_micro_mini_reg {
""")

html.write(R"""<html>
  <head><title>Micromini Reg Map</title></head>
  <body>
  <h1> Micromini Reg Map </h1>
  <p><i>Generated by gen/gen_map.py</i></p>
  <p>For read registers, just write address then register then read.
  <p>For write registers, just write register.
  <p>For read/write registers, you must specify at least one  value (even if reading), though there are values that don't change the state and are only for reading back. Readbacks will always be queued for RW. 
  <hr/>
  <table border=1>
    <tr> <td> Register </td> <td> Type (R|W|RW) </td> <td> Name </td> <td> Description </td> </tr>
""")

with open("gen/i2c_reg_map.csv") as f:

    r = csv.reader(f)
    read_regs = []
    write_regs = []
    for i,row in enumerate(r):
        print(i,row)
        # ignore header
        if i == 0:
            continue
        reg = int(row[0].strip(), 16)
        rw = row[1].strip()
        name = row[2].strip()
        desc = row[3].strip()
        html.write("<tr><td>0x%x</td><td>%s</td><td>%s</td><td>%s</td></tr>\n" % (reg, rw, name,desc))
        if 'R' in rw:
            read_regs.append((reg,name))
        if 'W' in rw:
            write_regs.append((reg,name))
        header.write("\tMICROMINI_%-32s = 0x%02x, /*[%c%c] %s*/\n" % (name, reg, 'R' if 'R' in  rw else ' ', 'W' if 'W' in rw else ' ', desc))

    header.write("};\n\n")
    header.write("/* X macros for registers */")
    header.write("\n\n#define MICROMINI_W1_READ_REGISTERS \\\n")
    for reg in read_regs:
        header.write ("X(0x%x, %s) \\\n" % (reg[0], reg[1]))

    header.write("\n\n#define MICROMINI_W1_WRITE_REGISTERS \\\n")
    for reg in write_regs:
        header.write ("X(0x%x, %s) \\\n" % (reg[0], reg[1]))

header.write("\n\n#endif\n")
html.write(R"""
    </table>
</body>
</html>""")

html.close()
header.close()





